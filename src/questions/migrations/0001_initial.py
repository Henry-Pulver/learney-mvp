# Generated by Django 3.2.2 on 2021-11-04 13:13

import uuid

import django.db.models.deletion
from django.db import migrations, models

import learney_web.validators
import questions.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("knowledge_maps", "0002_knowledgemapmodel_allow_suggestions"),
    ]

    operations = [
        migrations.CreateModel(
            name="QuestionModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique id for question response",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "question_text",
                    models.TextField(
                        help_text="Text for question", validators=[questions.validators.not_null]
                    ),
                ),
                (
                    "answer_text",
                    models.JSONField(
                        help_text="JSON list containing answers - first is correct, all after are incorrect.",
                        validators=[
                            questions.validators.not_null,
                            questions.validators.ensure_list,
                        ],
                    ),
                ),
                (
                    "feedback_text",
                    models.TextField(
                        help_text="Text containing feedback",
                        validators=[questions.validators.not_null],
                    ),
                ),
                (
                    "author_user_id",
                    models.CharField(
                        help_text="User ID of user who wrote this question", max_length=64
                    ),
                ),
                (
                    "session_id",
                    models.TextField(
                        blank=True,
                        help_text="session_id of the session the question was written in",
                        null=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Time that the question was written"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionTagModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique id for tag on question",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "concept_id",
                    models.CharField(
                        help_text="Concept id that the question is tagged with",
                        max_length=16,
                        validators=[learney_web.validators.validate_numeric],
                    ),
                ),
                (
                    "map",
                    models.ForeignKey(
                        help_text="the map the concept is tagged to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="knowledge_maps.knowledgemapmodel",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="the question this is a tag of",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tags",
                        to="questions.questionmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionResponseModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique id for question response",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        help_text="User ID of user whose response this is", max_length=64
                    ),
                ),
                (
                    "session_id",
                    models.TextField(help_text="session_id of the session the response was from"),
                ),
                (
                    "response",
                    models.TextField(help_text="Response to this question", max_length=1024),
                ),
                ("correct", models.BooleanField(help_text="Was response correct?")),
                (
                    "time_asked",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Time that the question was asked"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="question this was a response to",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="responses",
                        to="questions.questionmodel",
                    ),
                ),
            ],
        ),
    ]
