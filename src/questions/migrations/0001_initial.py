# Generated by Django 3.2.2 on 2021-10-29 16:13

import uuid

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []  # type: ignore

    operations = [
        migrations.CreateModel(
            name="QuestionConceptTagModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique id for concept tag on question",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "question_id",
                    models.UUIDField(help_text="id of the question this was a response to"),
                ),
                (
                    "map_uuid",
                    models.UUIDField(help_text="UUID of the map the concept is tagged to"),
                ),
                (
                    "concept_id",
                    models.CharField(
                        help_text="Concept id that the question is tagged with", max_length=16
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique id for question response",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question_text", models.TextField(help_text="Text for question")),
                (
                    "answer_text",
                    models.JSONField(
                        help_text="JSON list containing answers - first is correct, all after are incorrect."
                    ),
                ),
                ("feedback_text", models.TextField(help_text="Text containing feedback")),
                (
                    "author_user_id",
                    models.CharField(
                        help_text="User ID of user who wrote this question", max_length=64
                    ),
                ),
                (
                    "session_id",
                    models.TextField(
                        blank=True,
                        help_text="session_id of the session the question was written in",
                        null=True,
                    ),
                ),
                (
                    "time_written",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Time that the question was written"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionResponseModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique id for question response",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        help_text="User ID of user whose response this is", max_length=64
                    ),
                ),
                (
                    "session_id",
                    models.TextField(help_text="session_id of the session the response was from"),
                ),
                (
                    "question_id",
                    models.UUIDField(help_text="id of the question this was a response to"),
                ),
                (
                    "response",
                    models.TextField(help_text="Response to this question", max_length=1024),
                ),
                ("correct", models.BooleanField(help_text="Was response correct?")),
                (
                    "time_to_respond",
                    models.TimeField(
                        help_text="Time it took for the user to respond to the question"
                    ),
                ),
                (
                    "time_asked",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Time that the question was asked"
                    ),
                ),
            ],
        ),
    ]
