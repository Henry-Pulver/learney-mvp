# Generated by Django 3.2.2 on 2021-12-22 14:49

import django.db.models.deletion
from django.db import migrations, models


def populate_content_map_field(apps, schema_editor):
    KnowledgeMapModel = apps.get_model("knowledge_maps", "KnowledgeMapModel")
    ContentLinkPreview = apps.get_model("learney_backend", "ContentLinkPreview")
    for link_preview_entry in ContentLinkPreview.objects.all():
        link_preview_entry.map = KnowledgeMapModel.objects.get(
            unique_id=link_preview_entry.map_uuid
        )
        link_preview_entry.save()


def populate_content_map_uuid_field(apps, schema_editor):
    ContentLinkPreview = apps.get_model("learney_backend", "ContentLinkPreview")
    for link_preview_entry in ContentLinkPreview.objects.all():
        link_preview_entry.map_uuid = link_preview_entry.map.unique_id
        link_preview_entry.save()


def populate_vote_map_field(apps, schema_editor):
    KnowledgeMapModel = apps.get_model("knowledge_maps", "KnowledgeMapModel")
    ContentVote = apps.get_model("learney_backend", "ContentVote")
    for vote_entry in ContentVote.objects.all():
        vote_entry.map = KnowledgeMapModel.objects.get(unique_id=vote_entry.map_uuid)
        vote_entry.save()


def populate_vote_map_uuid_field(apps, schema_editor):
    ContentVote = apps.get_model("learney_backend", "ContentVote")
    for vote_entry in ContentVote.objects.all():
        vote_entry.map_uuid = vote_entry.map.unique_id
        vote_entry.save()


class Migration(migrations.Migration):

    dependencies = [
        ("knowledge_maps", "0004_fix_underscore_issue_name_id"),
        ("learney_backend", "0017_auto_20211222_1449"),
    ]

    operations = [
        migrations.AddField(
            model_name="contentlinkpreview",
            name="map",
            field=models.ForeignKey(
                help_text="Map this goal corresponds to",
                related_name="link_previews",
                on_delete=django.db.models.deletion.CASCADE,
                to="knowledge_maps.knowledgemapmodel",
                null=True,
            ),
        ),
        migrations.RunPython(
            populate_content_map_field, reverse_code=populate_content_map_uuid_field
        ),
        migrations.RemoveField(
            model_name="contentlinkpreview",
            name="map_uuid",
        ),
        migrations.AlterField(
            model_name="contentlinkpreview",
            name="map",
            field=models.ForeignKey(
                help_text="Map this content link corresponds to",
                related_name="link_previews",
                on_delete=django.db.models.deletion.CASCADE,
                to="knowledge_maps.knowledgemapmodel",
            ),
        ),
        migrations.AddField(
            model_name="contentvote",
            name="map",
            field=models.ForeignKey(
                help_text="Map this content link corresponds to",
                related_name="votes",
                on_delete=django.db.models.deletion.CASCADE,
                to="knowledge_maps.knowledgemapmodel",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="contentvote",
            name="timestamp",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.RunPython(populate_vote_map_field, reverse_code=populate_vote_map_uuid_field),
        migrations.RemoveField(
            model_name="contentvote",
            name="map_uuid",
        ),
        migrations.AlterField(
            model_name="contentvote",
            name="map",
            field=models.ForeignKey(
                help_text="Map this content link corresponds to",
                related_name="votes",
                on_delete=django.db.models.deletion.CASCADE,
                to="knowledge_maps.knowledgemapmodel",
            ),
        ),
    ]
