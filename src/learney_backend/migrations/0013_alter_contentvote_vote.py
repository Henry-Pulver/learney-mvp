# Generated by Django 3.2.2 on 2021-10-20 13:55

from datetime import datetime

from django.db import migrations, models

TIME_WHEN_BROKEN = datetime(2021, 9, 20)


def null_broken_votes(apps, schema_editor):
    """For a period of time, the vote data was broken. Ie:

    WWWWWWWXXXXXXXXXXXXXXWWWWWWWWWWW
    Time ->       |
              20/09/21

    Where W is working and X is broken data.

    All broken data is stored as 'False'.

    This data migration takes the big chunk of False data (including Sept 20th 2021)
     and replaces it with None's. This way it can be excluded from queries.
    """
    ContentVote = apps.get_model("learney_backend", "ContentVote")
    recent_fixed_entries = ContentVote.objects.filter(timestamp__gt=TIME_WHEN_BROKEN, vote=True)
    if recent_fixed_entries.count() == 0:
        return  # Otherwise it would error
    end_of_broken_entry = recent_fixed_entries.earliest("timestamp")

    early_non_broken_entries = ContentVote.objects.filter(timestamp__lt=TIME_WHEN_BROKEN, vote=True)
    if early_non_broken_entries.count() == 0:
        return  # Otherwise it would error
    start_of_broken_entry = early_non_broken_entries.latest("timestamp")

    all_broken_entries = ContentVote.objects.filter(
        timestamp__gt=start_of_broken_entry.timestamp,
        timestamp__lt=end_of_broken_entry.timestamp,
        vote=False,
    )
    print(f"Number of broken entries found: {all_broken_entries.count()}")
    for entry in all_broken_entries:
        ContentVote.objects.filter(pk=entry.pk).update(vote=None, timestamp=entry.timestamp)
    print(f"Number of entries rectified: {ContentVote.objects.filter(vote=None).count()}")


class Migration(migrations.Migration):

    dependencies = [
        ("learney_backend", "0012_alter_contentvote_session_id"),
    ]

    operations = [
        migrations.AlterField(
            model_name="contentvote",
            name="vote",
            field=models.BooleanField(
                help_text="The direction of the vote on the link - True is an upvote and False means downvote",
                null=True,
            ),
        ),
        migrations.RunPython(null_broken_votes, reverse_code=migrations.RunPython.noop),
    ]
